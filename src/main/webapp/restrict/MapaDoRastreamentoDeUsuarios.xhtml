<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns="http://www.w3.org/1999/xhtml"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:p="http://primefaces.org/ui"
		template="layout.xhtml">
		
	<ui:define name="tarefas">
		<p:growl id="msg1" showDetail="true"/>
		<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"/>
		<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js"/>
		<script type="text/javascript">
//<![CDATA[
            

var mainMap;

var markersDosPontosRastreados;

var arrayDosPontosRastreados;

var directionsDisplay;
var directionsService = new google.maps.DirectionsService();

var primeiroPontoRastreadoDoRastreamento;
var ultimoPontoRastreadoDoRastreamento;


var infoWindowSingleton = new google.maps.InfoWindow();
//]]>
	</script>
		
		<h:form id="formDaMensagem">
		
			<!-- mensagem de que não existem informações de rastreamento --> 
			<p:remoteCommand 	name="naoExistemPontosDeRastreamento" 
								actionListener="#{rastreamentoDeUsuariosBean.mostraMensagemDeQueNaoExistemPontosDeRastreamento}" 
								update="mensagens"/>
								
			<!-- mensagem de que a página foi atualizada --> 
			<p:remoteCommand 	name="paginaAtualizada" 
								actionListener="#{rastreamentoDeUsuariosBean.mostraMensagemDeQuePaginaFoiAtualizada}" 
								update="mensagens"/>
																
			<p:growl id="mensagens" />
			
		</h:form>

		<h:form prependId="false" id="formMapa">
			
			<h:inputHidden id="primeiraLatitudeDoPontoRastreado" value="#{rastreamentoDeUsuariosBean.primeiroPontoRastreadoDoRastreamento.latitude}"/>
			<h:inputHidden id="primeiraLongitudeDoPontoRastreado" value="#{rastreamentoDeUsuariosBean.ultimoPontoRastreadoDoRastreamento.longitude}"/>
			
			<h:inputHidden id="ultimaLatitudeDoPontoRastreado" value="#{rastreamentoDeUsuariosBean.ultimoPontoRastreadoDoRastreamento.latitude}"/>
			<h:inputHidden id="ultimaLongitudeDoPontoRastreado" value="#{rastreamentoDeUsuariosBean.ultimoPontoRastreadoDoRastreamento.longitude}"/>
			
			<!-- Pontos Rastreados para Traçamento da Rota --> 
			<p:remoteCommand name="getPontosRastreados" update=":formMapa:pontosRastreados" resetValues="true"/>
			<h:inputHidden id="pontosRastreados" value="#{rastreamentoDeUsuariosBean.pontosRastreados}"/>
			
			<!-- Coordendas dos Pontos Rastreados para Traçamento da Rota --> 
			<p:remoteCommand name="getCoordenadasDosPontosRastreados" update=":formMapa:coordenadasDosPontosRastreados" resetValues="true"/>
			<h:inputHidden id="coordenadasDosPontosRastreados" value="#{rastreamentoDeUsuariosBean.coordenadasDosPontosRastreados}"/>
			
			<div class="estiloDiv">
				<p:panel id="pnlButtons">
									
						<p:commandButton 	id="buttonQueVoltaParaListaDeRastreamentosAtivos"
											value="#{i18n['button.back']}"
											immediate="true"
											action="#{rastreamentoDeUsuariosBean.retornaParaListaDeRastreamentosAtivos}" />
																									
				</p:panel>
			
					<div id="map-canvas" style="width:100%;height:90%;position:absolute;"></div>			
			</div>
		</h:form>
		
		<script type="text/javascript">
//<![CDATA[

function atualizaPagina(){
	window.location.reload(1);
}

function initialize() {
	
	//Define o Refresh da Pagina
	setTimeout(function(){
		atualizaPagina();  
	}, 300000);
	
	primeiroPontoRastreadoDoRastreamento = new google.maps.LatLng(
			document.getElementById('primeiraLatitudeDoPontoRastreado').value,
			document.getElementById('primeiraLongitudeDoPontoRastreado').value);
	
	ultimoPontoRastreadoDoRastreamento = new google.maps.LatLng(
			document.getElementById('ultimaLatitudeDoPontoRastreado').value,
			document.getElementById('ultimaLongitudeDoPontoRastreado').value);
	
	// Monta o mapa:
	var centroDoMapa = new google.maps.LatLng(
			document.getElementById('primeiraLatitudeDoPontoRastreado').value,
			document.getElementById('primeiraLongitudeDoPontoRastreado').value);
					
	var mapOptions = {
			zoom: 17,
			mapTypeId: google.maps.MapTypeId.HYBRID,
			center: centroDoMapa
			};
	mainMap = new google.maps.Map(
			document.getElementById('map-canvas'),
			mapOptions);


	directionsDisplay = new google.maps.DirectionsRenderer();
	
	// Markers dos Checklists:
	markersDosPontosRastreados = new MarkerClusterer(mainMap);


	mostraPontosRastreados();
	mostraRotaDosPontosRastreados();
	
}

/**
 * Atualiza os Markers com o Rastreamento
 */
function mostraPontosRastreados() {
	
	arrayDosPontosRastreados = new Array();
	
	//Remove os Markers Existentes na Tela a Cada Atualização
	removerMarkers(markersDosPontosRastreados, arrayDosPontosRastreados);
	
	getPontosRastreados();
	
	var markersData = document.getElementById("pontosRastreados").value.split(",");
	
	
	for (var i = 0; i < markersData.length; i++) {
		
		// FIXME: Não pode mudar (ainda) a ordem das variáveis:
		var _title = markersData[i++];
		var id = markersData[i++];
		var _lat = markersData[i++];
		var _lng = markersData[i++];
		var dataHora = markersData[i++];
		
		// FIXME: Trocar os Propertys de Menu pelos Propertys de Label 
				
		if( ! (_lat == null || _lat == 'undefined' || _lat == 'null' || _lat == '0.0') ) {
			if( ! (_lng == null || _lng == 'undefined' || _lng == 'null' || _lng == '0.0') ) {
										
				var _infoWindowContent = "<div>"
					+ "<h1>" + "#{i18n['label.details']}" + "</h1>"
					+ "<div>"
					+ "<p>"
					+ "<b>#{i18n['label.activity']}:</b>&nbsp;" + id + "</br>"
					+ "<b>#{i18n['label.date_time']}:</b>&nbsp;" + dataHora + "</br>"
					+ "</p>"
					+ "</br>"
					+ "</div>"
					+ "</div>";
					
				var markerDoPontoRastreado = new google.maps.Marker({
					draggable: false,
					title: _title,
					icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
					animation: google.maps.Animation.DROP,
					html: _infoWindowContent,
					position: new google.maps.LatLng(
							_lat,
							_lng)
				});
							
				arrayDosPontosRastreados.push(markerDoPontoRastreado);
				
				// Monta o InfoWindow:
				google.maps.event.addListener(markerDoPontoRastreado, 'click', function() {
					infoWindowSingleton.setContent(this.html);
					infoWindowSingleton.open(mainMap, this);
				});
			
			}
		}
		
	}
			
	if (arrayDosPontosRastreados.length <= 0){
		
		naoExistemPontosDeRastreamento();
		
	} else {
	
		var request = {
			    origin: primeiroPontoRastreadoDoRastreamento,
			    destination: ultimoPontoRastreadoDoRastreamento
			 };
					 
		markersDosPontosRastreados.addMarkers(arrayDosPontosRastreados);
		
	}
		
	
}



/**
 * Mostra a Rota dos Pontos Rastreados.
 *
 * chk: Componente checkbox que indica se deve-se exibir ou ocultar as 
 * ocorrencias.
 */
function mostraRotaDosPontosRastreados() {
	 
	getCoordenadasDosPontosRastreados();
				
	directionsDisplay.setMap(mainMap);

	var wayPoints = [];
	var markersData = document.getElementById("coordenadasDosPontosRastreados").value.split(",");
	
	for (var i = 0; i < markersData.length; i++) {
		
		var _lat = markersData[i++];
		var _lng = markersData[i++];
		
		if( ! (_lat == null || _lat == 'undefined' || _lat == 'null' || _lat == '0.0') ) {
			if( ! (_lng == null || _lng == 'undefined' || _lng == 'null' || _lng == '0.0') ) {
					
				//alert('lat ' + _lat + ' lng ' + _lng);
				
				wayPoints.push({
			          location:new google.maps.LatLng( _lat, _lng),
			          stopover:true});
			}
		}

	}
	
	if (wayPoints.length <= 0){
				
	} else {
	
		var request = {
			    origin: primeiroPontoRastreadoDoRastreamento,
			    waypoints: wayPoints,
			    destination: ultimoPontoRastreadoDoRastreamento,
			    optimizeWaypoints: true,
			    travelMode: google.maps.DirectionsTravelMode.DRIVING
			 };
		
		directionsService.route(request, function(response, status) {
		    if (status == google.maps.DirectionsStatus.OK) {
		      directionsDisplay.setDirections(response);
		    }
		});
		
	}
	 
 }


/**
 * 
 * markerClusterer: Um 'MarkerClusterer' que armazena o grupo de Markers.
 * markers: Array de Markers a ser removido do 'MarkerClusterer'.
 */
function popularMarkers(markerClusterer, markers, hiddenData) {
	var markersData = document.getElementById(hiddenData).value.split(",");
	for (var i = 0; i < markersData.length; i++) {
		var _title = markersData[i++];
		var _marker = new google.maps.Marker({
			draggable: false,
			title: _title,
			icon: "data:image/PNG;base64," + markersData[i++],
			position: new google.maps.LatLng(
					markersData[i++],
					markersData[i])
		});
		
		markers.push(_marker);
	}
	
	markerClusterer.addMarkers(markers);
}

/**
 * Remove todos os markers de um 'markerClusterer'.
 *
 * markerClusterer: Um 'MarkerClusterer' que armazena o grupo de Markers.
 * markers: Array de Markers a ser removido do 'MarkerClusterer'.
 */
function removerMarkers(markerClusterer, markers) {
	 	 
	for (var i=0; i < markers.length; i++) {
		markerClusterer.removeMarker(markers[i]);
	}
}

google.maps.event.addDomListener(window, 'load', initialize);

// Trecho que Chama uma Mensagem que verifica se o Checklist ou Evento possuem Latitudes/Longitudes nulas
document.addEventListener('DOMContentLoaded', function() {
		
	paginaAtualizada();
	
}, false);


//]]>
		</script>
	
	</ui:define>
	
</ui:composition>